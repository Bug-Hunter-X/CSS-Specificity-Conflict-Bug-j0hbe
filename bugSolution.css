Several solutions exist to resolve the specificity conflict:

**1. Increasing Specificity of Intended Style:**

```css
#container {
  color: blue;
}

.element {
  color: red;
}

#container .element {
  color: green !important; /* Using !important (generally discouraged) */
}
```

**2. Using a More Specific Selector (Better Approach):**

```css
#container {
  color: blue;
}

.element {
  color: red;
}

#container .element.specific {
  color: green; 
}

/* Then apply the class to the specific element in HTML */
<div id="container">
  <div class="element specific"></div>
</div>
```

**3. Reordering Styles (Less Reliable):**

Place the more specific selector (for green) before the less specific selector (for blue) in your CSS file.  This isn't a guaranteed solution as order can be overridden by other factors. 

The best solution is usually increasing the specificity of your intended rule, while carefully avoiding overuse of `!important`.